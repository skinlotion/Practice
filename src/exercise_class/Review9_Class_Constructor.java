package exercise_class;

	// 1. 클래스 개념
	// 	- 공통적인 속성 혹은 성질을 가진 대상을 정의한 것
	// 	- 특정한 객체에 대한 속성 및 기능을 정의한 것

	// 1) 클래스 선언방법
	// 접근제어자 + class + 클래스명 {속성1, 속성2 ...}
	
	// 2) 객체 (인스턴스)
	// - 클래스로 생성된 실체를 이야기 한다. 클래스에서 정의한 필드와 메서드를 가지고 있다
	// - 특정 클래스로 생성된 객체를 '특정 클래스의 인스턴스'라고 부름
	// - 클래스로 생성된 각각의 인스턴스는 서로 다른 속성 값을 가지고 있음.

	// 객체(인스턴스) 생성방법
	// 생성하고자 하는 형태의 클래스로 참조변수를 선언하고
	// 해당 참조변수의 new 클래스();를 이용하여 생성한 인스턴스의 주소를 저장.
	// 예) ClassName refferenceVariable = new ClassName();
	//     	클래스명		참조 변수 명 		= new	클래스명 ();


	// 2. 매서드 개념
	// 클래스가 행할 수 있는 작업 혹은 행동 및 기능을 정의하는 것

	// 1) 매서드 생성방법
	// 접근제어자 + 변환타입 + 메서드 명 + (매개변수1, 매개변수2) (선언부) 
	//	{   실행문 (구현부)   } 

	// 2) 클래스 매서드 (static)
	//	모든 인스턴스가 공통적으로 사용하는 매서드
	//	인스턴스 생성 없이 클래스로 사용가능
	// 	클래스 매서드에서는 인스턴스 변수를 사용할 수 없음.
	//	매서드 리턴타입 앞에 앞에 Static을 붙혀준다.

	// 3) 인스턴스 매서드 
	//	각각의 인스턴스가 독립적으로 사용하는 매서드
	// 	반드시 인스턴스가 생성 된 후에 사용 가능

class student {
	
	// 클래스 변수
	// 모든 인스턴스가 공통으로 값을 가지는 변수
	//	*인스턴스 생성없이 클래스로 바로 접근 가능
	
	static String a = "한국대학교"; 		

	//인스턴스 변수
	String studentNumber;
	String name;
	int age;
	String course;
	
	public void startVacation() {
		System.out.println("방학시작");
	}
	
	void study() {
		int time = 4;
		
	}
}

public class Review9_Class_Constructor {

	
	String name;
	int age;
	
	// NoArgsConstructor
	
	
}
